<UserControl x:Name="This"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:PhotoViewer.ViewModels"
             xmlns:interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             x:Class="PhotoViewer.Views.PhotoThumbnailView"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type viewModels:PhotoViewModel}}"
             Width="256" Height="256">

    <interactivity:Interaction.Triggers>
        <interactivity:EventTrigger EventName="Loaded">
            <interactivity:InvokeCommandAction Command="{Binding LoadThumbnailCommand, Mode=OneTime}" />
        </interactivity:EventTrigger>
    </interactivity:Interaction.Triggers>
    
    <interactivity:Interaction.Behaviors>
        <ei:DataStateBehavior Binding="{Binding ElementName=This, Path=IsMouseOver}"
                              Value="True"
                              TrueState="MouseOver"
                              FalseState="Normal"/>
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Border Background="LightGray"
                Width="{Binding ThumbnailWidth, Mode=OneWay}"
                Height="{Binding ThumbnailHeight, Mode=OneWay}"/>

        <ProgressBar IsIndeterminate="True" VerticalAlignment="Center" HorizontalAlignment="Center"
                     Width="100" Height="25"
                     Visibility="{Binding Thumbnail, Converter={StaticResource NullToVisibilityConverter}}"/>
        
        <Border ClipToBounds="True"
                Background="{x:Null}"
                Width="{Binding ThumbnailWidth, Mode=OneWay}"
                Height="{Binding ThumbnailHeight, Mode=OneWay}">
            <Image x:Name="Thumbnail"
                   Source="{Binding Thumbnail, Mode=OneWay}"
                   Stretch="Uniform"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   RenderTransformOrigin="0.5 0.5"
                   ToolTip="{Binding Path}">

                <Image.Effect>
                    <BlurEffect Radius="{Binding IsImageBlurred, Converter={StaticResource IsImageBlurredToBlurRadiusConverter}, Mode=OneWay}"
                                RenderingBias="Quality"/>
                </Image.Effect>

                <Image.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Image.RenderTransform>
                
                <Image.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding OpenPhotoCommand, Mode=OneTime}"
                                  CommandParameter="{Binding ., Mode=OneTime}"/>
                </Image.InputBindings>
            </Image>
        </Border>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.15"/>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Thumbnail"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1.1" />

                        <DoubleAnimation Storyboard.TargetName="Thumbnail"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1.1"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>